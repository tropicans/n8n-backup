{
  "createdAt": "2025-06-03T10:40:19.276Z",
  "updatedAt": "2025-07-02T03:09:56.687Z",
  "id": "ufDY07RGsjmlmUvX",
  "name": "ContextualRAG",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{\n{\n  \"content\": `${ $json.text }\\n---\\n${ $json.chunk }`\n}\n}}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').first().json.file_id }}"
              },
              {
                "name": "file_title",
                "value": "={{ $('Set File ID').first().json.file_title }}"
              },
              {
                "name": "file_url",
                "value": "={{ $('Set File ID').first().json.file_url }}"
              }
            ]
          }
        }
      },
      "id": "ffd115da-486d-410b-9db7-7f7106ce8a7f",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        2856,
        547.5
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Set File ID').item.json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "1ebbb1dd-f955-47aa-a8f1-01ff498236d3",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1040,
        200
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "OBNDHhGFv2HrxBwA",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1IjRLUEsgNuI5lAwGl9AzqrXMVYvhbryO",
          "mode": "list",
          "cachedResultName": "Neon",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1IjRLUEsgNuI5lAwGl9AzqrXMVYvhbryO"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "bbaa7da2-8522-4f8c-867b-a79d642d38a9",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        160,
        225
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "OBNDHhGFv2HrxBwA",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1IjRLUEsgNuI5lAwGl9AzqrXMVYvhbryO",
          "mode": "list",
          "cachedResultName": "Neon",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1IjRLUEsgNuI5lAwGl9AzqrXMVYvhbryO"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "7c8dc37a-c987-415c-8fa9-74e7aeafc837",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        160,
        425
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "OBNDHhGFv2HrxBwA",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "52503cea-1956-4b0a-ad07-37403369152a",
      "name": "Extract Document Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1260,
        200
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "77d782de-169d-4a46-8a8e-a3831c04d90f",
              "name": "file_title",
              "value": "={{ $json.name }}",
              "type": "string"
            },
            {
              "id": "9bde4d7f-e4f3-4ebd-9338-dce1350f9eab",
              "name": "file_url",
              "value": "={{ $json.webViewLink }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "a643a2c3-e31e-4bcf-8351-8e8b7951a46f",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        600,
        200
      ]
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        380,
        325
      ],
      "id": "af2360d2-6113-4cb3-a882-756fc815d242",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "chunkSize": 2000,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        2944,
        745
      ],
      "id": "345fcaf1-3399-4706-9e2c-1cccfacd700d",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const chunks = [];\nconst chunkSize = 400;\nconst chunkOverlap = 0;\nconst text = $json.data.replace(/\\n/, '');\n\nfor (let i=0, j=Math.round(text.length/chunkSize); i<j; i++) {\n  chunks.push(\n    text.substr(\n      Math.max(0,(i * chunkSize)-chunkOverlap),\n      chunkSize\n    )\n  );\n}\n\nreturn { chunks };"
      },
      "id": "39e1ed78-5bdf-4771-b227-d1e75bc067e1",
      "name": "Create Chunks From Doc",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1700,
        200
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "chunks",
        "options": {
          "destinationFieldName": "chunk"
        }
      },
      "id": "892cb6aa-727d-4ea2-ad2f-6f4dc9ea559b",
      "name": "Chunks To List",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1920,
        200
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<document> \n{{ $('Extract Document Text').first().json.data }} \n</document>\nHere is the chunk we want to situate within the whole document \n<chunk> \n{{ $json.chunk }}\n</chunk> \nPlease give a short succinct context to situate this chunk within the overall document for the purposes of improving search retrieval of the chunk. Answer only with the succinct context and nothing else. "
      },
      "id": "9d5d35cb-b728-4112-a140-84087c47e139",
      "name": "Generate Contextual Text",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        2140,
        200
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "069d067c-3534-4939-8ff4-34dee02a9436",
              "name": "chunk",
              "value": "={{ $('Chunks To List').item.json.chunk }}",
              "type": "string"
            },
            {
              "id": "24e01f4f-e156-47e9-a89e-9cbdccda6bd4",
              "name": "text",
              "value": "={{ $('Generate Contextual Text').item.json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f443a8d6-7a68-4431-917d-44c38ae1415c",
      "name": "Get Values",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2516,
        200
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": "documents_pg",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "typeVersion": 1.1,
      "position": [
        2752,
        325
      ],
      "id": "c8ed4216-1243-40bc-934b-db5c98b0f06c",
      "name": "Postgres PGVector Store",
      "credentials": {
        "postgres": {
          "id": "zMdP0E3yaPMdxeKL",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DO $$\nBEGIN\n    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'documents_pg') THEN\n        EXECUTE 'DELETE FROM documents_pg WHERE metadata->>''file_id'' LIKE ''%' || $1 || '%''';\n    END IF;\nEND\n$$;",
        "options": {
          "queryReplacement": "={{ $json.file_id }}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        820,
        200
      ],
      "id": "468edcec-e85b-46da-955a-266208a37b17",
      "name": "Delete Old Doc Records",
      "credentials": {
        "postgres": {
          "id": "zMdP0E3yaPMdxeKL",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "model": "jina/jina-embeddings-v2-base-en:latest"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        2736,
        545
      ],
      "id": "2f0ba248-a6d6-4834-a5d1-37132562c815",
      "name": "Embeddings Ollama",
      "credentials": {
        "ollamaApi": {
          "id": "er9UBfBKoRVqOkGC",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "model": "gemma3:12b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        2228,
        420
      ],
      "id": "2adc58b4-4867-42fa-8487-8d7dee5703c7",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "er9UBfBKoRVqOkGC",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const text = $json.data || '';\nconst title = ($json.file_title || '').toLowerCase();\n\n// Basic cleaning\nlet cleaned = text\n  .replace(/[ \\t]+/g, ' ')               // Normalisasi spasi/tab\n  .replace(/\\r\\n|\\r/g, '\\n')             // Line break konsisten\n  .replace(/\\n{2,}/g, '\\n\\n')            // Hindari blank lines terlalu banyak\n  .replace(/\\s+s\\.?d\\.?\\s+/gi, ' sampai ') // ganti \"s.d.\" dan variasinya\n  .replace(/\\s+s\\/d\\s+/gi, ' sampai ')\n  .replace(/\\s+–\\s+/g, ' sampai ')\n  .trim();\n\n// Default keywords\nlet keywords = 'informasi umum, dokumen pemerintah';\n\n// Topik-based dynamic keywording\nif (title.includes('pelatihan') || title.includes('keprotokolan')) {\n  keywords = 'pelatihan keprotokolan, jadwal pelatihan, tanggal pelaksanaan, angkatan pelatihan';\n} else if (title.includes('beasiswa')) {\n  keywords = 'beasiswa, pendaftaran beasiswa, jadwal seleksi, kuota beasiswa';\n} else if (title.includes('pengadaan')) {\n  keywords = 'pengadaan barang dan jasa, jadwal lelang, kontrak, LPSE';\n} else if (title.includes('asn') || title.includes('pegawai')) {\n  keywords = 'ASN, PNS, pegawai negeri, pelatihan ASN, manajemen ASN';\n}\n\nconst finalText = cleaned + `\\n\\n#KataKunci: ${keywords}`;\n\nreturn [{\n  json: {\n    data: finalText,\n    file_title: $json.file_title,\n    original_keywords: keywords\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1480,
        200
      ],
      "id": "02e73d1d-d289-4aac-8cb0-21cd00c843db",
      "name": "Code1"
    }
  ],
  "connections": {
    "Download File": {
      "main": [
        [
          {
            "node": "Extract Document Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Text": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Postgres PGVector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Delete Old Doc Records",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Chunks To List": {
      "main": [
        [
          {
            "node": "Generate Contextual Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Chunks From Doc": {
      "main": [
        [
          {
            "node": "Chunks To List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Contextual Text": {
      "main": [
        [
          {
            "node": "Get Values",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Values": {
      "main": [
        [
          {
            "node": "Postgres PGVector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres PGVector Store": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Doc Records": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama": {
      "ai_embedding": [
        [
          {
            "node": "Postgres PGVector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Generate Contextual Text",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Create Chunks From Doc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "b4134724-7041-4ad5-acb7-5238b7004ebe",
  "triggerCount": 0,
  "tags": []
}