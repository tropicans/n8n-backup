{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Model": {
      "ai_languageModel": [
        [
          {
            "node": "Generate content",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Pick the right music",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Generate content",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Configure": {
      "main": [
        [
          {
            "node": "Get music tags",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate content": {
      "main": [
        [
          {
            "node": "Pick the right music",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Check video status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download the video": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start generating the video": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check video status": {
      "main": [
        [
          {
            "node": "Ready?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ready?": {
      "main": [
        [
          {
            "node": "Download the video",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get music tags": {
      "main": [
        [
          {
            "node": "Group the music tags",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Pick the right music",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Pick the right music": {
      "main": [
        [
          {
            "node": "Start generating the video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Group the music tags": {
      "main": [
        [
          {
            "node": "Generate content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets1": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Configure",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-02T07:43:59.441Z",
  "id": "X4stKLXYpf2oiMLG",
  "isArchived": false,
  "meta": null,
  "name": "short-video-maker-rest-api",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1280,
        40
      ],
      "id": "381ab9a6-0584-4905-9d02-c63ced6fc658",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "model": "llama3:8b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmOllama",
      "typeVersion": 1,
      "position": [
        1820,
        300
      ],
      "id": "afe2829f-fb53-4e64-b167-662fa59d3f0f",
      "name": "Ollama Model",
      "credentials": {
        "ollamaApi": {
          "id": "er9UBfBKoRVqOkGC",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"video_title\": {\n          \"type\": \"string\",\n          \"description\": \"the title of the video we use on YouTube\"\n        },\n        \"scenes\": {\n            \"type\": \"array\",\n            \"description\": \"the scenes of the video\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"text\": {\n                        \"type\": \"string\",\n                        \"description\": \"the main content; this will be used to generate speech from\"\n                    },\n                    \"searchTerms\": {\n                        \"type\": \"array\",\n                        \"description\": \"the search terms to use to find background videos on pexels\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"required\": [\n                    \"text\",\n                    \"searchTerms\"\n                ]\n            }\n        }\n    },\n    \"required\": [\n        \"scenes\",\n        \"video_title\"\n    ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1660,
        260
      ],
      "id": "2fe35256-032c-4a36-9206-700db46bc26d",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a19f9caa-f1aa-4ff0-a270-59248eeb27dd",
              "name": "SERVER_URL",
              "value": "http://short-video-maker:3123",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        860,
        40
      ],
      "id": "25f00e1a-c715-443b-9db7-9613ea0bf2a3",
      "name": "Configure"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=I'm creating a video programmatically using an API.\nThe API needs scenes to work with.\nEach scene requires a text, that will be transformed to speech, and 2-3 one-word search terms, that would be used to search background videos in the pexels api.\n\nCreate a short, 2 scene video about {{ $('Google Sheets1').item.json.Title }}",
        "hasOutputParser": true
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        1520,
        40
      ],
      "id": "2a96a47b-5f58-49a6-90c7-5ae3edff4aae",
      "name": "Generate content",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure').item.json.SERVER_URL }}/api/short-video",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"scenes\": {{ JSON.stringify($('Generate content').item.json.output.scenes, null, 2) }},\n  \"config\": {\n    \"paddingBack\": 1500,\n    \"music\": \"{{ $json.output.musicTag }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2280,
        40
      ],
      "id": "df61db7b-c947-4dba-8aa5-411d26fb9e00",
      "name": "Start generating the video"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2500,
        40
      ],
      "id": "4e8655d9-b15b-47d9-acb4-19f781a0527f",
      "name": "Wait",
      "webhookId": "fe4501f9-3334-4fc8-b3dd-83ea0ebb14a2"
    },
    {
      "parameters": {
        "url": "=http://short-video-maker:3123/api/short-video/{{ $('Start generating the video').item.json.videoId }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3160,
        40
      ],
      "id": "ccf58463-1a75-4bba-a20b-7fb1c7d7e2c0",
      "name": "Download the video",
      "alwaysOutputData": false,
      "retryOnFail": false
    },
    {
      "parameters": {
        "resource": "video",
        "operation": "upload",
        "title": "=Tes Upload dari n8n",
        "regionCode": "US",
        "categoryId": "24",
        "options": {
          "description": "Video ini diunggah menggunakan n8n otomatis.",
          "privacyStatus": "unlisted"
        }
      },
      "type": "n8n-nodes-base.youTube",
      "typeVersion": 1,
      "position": [
        -1280,
        400
      ],
      "id": "6119fa66-7ebf-4a03-b6d1-a875a2ddd8f4",
      "name": "Share on YouTube",
      "disabled": true
    },
    {
      "parameters": {
        "url": "={{ $('Configure').item.json.SERVER_URL }}/api/short-video/{{ $('Start generating the video').item.json.videoId }}/status",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2720,
        -40
      ],
      "id": "e7c0bb3d-99db-41d1-a1f1-916ac9c93f39",
      "name": "Check video status",
      "alwaysOutputData": false,
      "retryOnFail": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6cc1bd80-2bb7-47b6-950e-be3d6a36a965",
              "leftValue": "={{ $json.status }}",
              "rightValue": "ready",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2940,
        40
      ],
      "id": "76cf4f8f-c8d8-4944-9452-2fcf7654f7d1",
      "name": "Ready?"
    },
    {
      "parameters": {
        "content": "# Configure the server URL\n",
        "height": 460,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        780,
        -280
      ],
      "id": "22e09f98-c753-4609-a554-9fca314e020c",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "url": "={{ $json.SERVER_URL }}/api/music-tags",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1080,
        40
      ],
      "id": "296ff7d8-976a-41a3-a60d-0dbf4afc9af0",
      "name": "Get music tags"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"musicTag\": {\n            \"type\": \"string\",\n            \"description\": \"the selected music tag that goes well with the video\"\n        }\n    },\n    \"required\": [\n        \"musicTag\"\n    ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1980,
        260
      ],
      "id": "6278f23f-c8fb-42ca-9929-212aeefeb181",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=I'm generating a video programmatically using an API. I've already generated the scenes, and your task is to find the right music tag for he video.\n\n<VideoScenes>\n{{ $json.output.scenes.map(item => item.text).map(item => `<VideoScene>${item}</VideoScene>`).join('\\n') }}\n</VideoScenes>\n\n<MusicTags>\n{{ $('Group the music tags').item.json.data.map(item => `<MusicTag>${item}</MusicTag>`).join('\\n') }}\n</MusicTags>",
        "hasOutputParser": true
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        1900,
        40
      ],
      "id": "ae1084b7-c504-4d10-9e7f-c5a09ff74911",
      "name": "Pick the right music",
      "retryOnFail": true
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1300,
        40
      ],
      "id": "926f5ae9-e132-4519-b700-a2a1748d4575",
      "name": "Group the music tags"
    },
    {
      "parameters": {
        "content": "# Set me up",
        "height": 360,
        "width": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2440,
        -180
      ],
      "id": "c2bb8b3e-aa01-401b-823a-7e363ac1e229",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "={{ `/data/shared/content/${$('Google Sheets1').item.json.Title.replace(/[^a-z0-9]/gi, \"_\").toLowerCase()}.mp4` }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        3380,
        40
      ],
      "id": "0d501dcf-ad9f-4639-8f99-2a4d0a2b9dba",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "url": "https://newsdata.io/api/1/news?apikey=pub_73fc321b22a7416e85d16775de0a961f&country=us&language=en&category=top",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1060,
        40
      ],
      "id": "71765e74-1d43-4058-8980-741b9300f6f1",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "jsCode": "// Pisahkan semua artikel menjadi item-item terpisah\nreturn items[0].json.results.map(article => {\n  return {\n    json: {\n      title: article.title,\n      description: article.description,\n      link: article.link\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -840,
        40
      ],
      "id": "d6f5d1d1-549c-4a19-ae96-5bd59027359e",
      "name": "Code"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Based on this news headline, generate 1 viral YouTube Shorts video titles for a U.S. audience. Return only the numbered list with no extra content.\n\nHeadline: \"{{ $json.title }}\"\n",
        "options": {
          "systemMessage": "=You are a professional YouTube Shorts strategist. Your job is to convert news headlines into viral YouTube Shorts video titles. For each input headline, return exactly 1 titles in plain English. Each title must be short, modern, emotionally engaging, and optimized for a U.S. audience. Use only this format: numbered list (1–5), no emojis, no markdown, no explanations. Just output the titles.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -400,
        40
      ],
      "id": "2d595654-8a01-492f-b266-655e1bb74556",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "llama3:8b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -320,
        260
      ],
      "id": "20ed6fee-ee8d-4986-8858-f5eb55eb33e7",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "er9UBfBKoRVqOkGC",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -620,
        40
      ],
      "id": "076cc49e-552b-4cdd-a5b8-096ccc537110",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1dk_O-65HZUutIiNMntuoYPpr2tAHn-dLXjdSIs8vnow",
          "mode": "list",
          "cachedResultName": "TrendingNews",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1dk_O-65HZUutIiNMntuoYPpr2tAHn-dLXjdSIs8vnow/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "raw",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1dk_O-65HZUutIiNMntuoYPpr2tAHn-dLXjdSIs8vnow/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "No": "={{ $json.No }}",
            "Title": "={{ $json.Title }}",
            "Status": "Pending"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "No",
              "displayName": "No",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        200,
        40
      ],
      "id": "61778c76-cccd-454a-841a-775455ee9616",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "EvJFGzn1Pb9TRY0E",
          "name": "Google Sheets account Tropicans"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const lines = $json.output.split('\\n');\n\nreturn lines.map(line => {\n  const match = line.match(/^(\\d+)\\.\\s*(.+)$/); // ambil nomor dan judul\n  if (!match) return null;\n\n  const number = parseInt(match[1]);\n  const title = match[2];\n\n  return {\n    json: {\n      No: number,\n      Title: title\n    }\n  };\n}).filter(item => item !== null); // filter baris kosong jika ada\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -40,
        40
      ],
      "id": "4ceb78c4-a6e6-4d26-b651-4b59bf02b6ad",
      "name": "Code1"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1dk_O-65HZUutIiNMntuoYPpr2tAHn-dLXjdSIs8vnow",
          "mode": "list",
          "cachedResultName": "TrendingNews",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1dk_O-65HZUutIiNMntuoYPpr2tAHn-dLXjdSIs8vnow/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "raw",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1dk_O-65HZUutIiNMntuoYPpr2tAHn-dLXjdSIs8vnow/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status",
              "lookupValue": "Pending"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        420,
        40
      ],
      "id": "836ea464-17e9-4267-aaf6-c5943f1c0543",
      "name": "Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "EvJFGzn1Pb9TRY0E",
          "name": "Google Sheets account Tropicans"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Ambil hanya 1 item pertama yang status-nya \"Pending\"\nconst firstPending = items.find(item => item.json.Status === 'Pending');\n\nif (!firstPending) {\n  throw new Error('No pending items found.');\n}\n\nreturn [firstPending];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        640,
        40
      ],
      "id": "bc2fdf12-6728-4a3e-a9bf-1afee068ca1e",
      "name": "Code2"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-06-03T11:31:34.758Z",
      "updatedAt": "2025-06-03T11:31:34.758Z",
      "id": "WUgF9NxlS5JYj7z5",
      "name": "ShortVideo"
    },
    {
      "createdAt": "2025-06-04T01:36:21.061Z",
      "updatedAt": "2025-06-04T01:36:21.061Z",
      "id": "niyuhxYdtvAE4xcW",
      "name": "YouTube"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-07-02T03:07:18.543Z",
  "versionId": "ac4a2d0b-7b10-495f-b1e4-1e06a9d4bceb"
}