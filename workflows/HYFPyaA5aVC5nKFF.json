{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Get top weekly posts2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Generate video2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client2": {
      "ai_tool": [
        [
          {
            "node": "Generate video2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate2": {
      "main": [
        [
          {
            "node": "Generate video2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Check video status2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Download the video2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser2": {
      "ai_outputParser": [
        [
          {
            "node": "Generate video2",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Download the video2": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate video2": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check video status2": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Map fields2": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get top weekly posts2": {
      "main": [
        [
          {
            "node": "Map fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-04T01:36:05.390Z",
  "id": "HYFPyaA5aVC5nKFF",
  "isArchived": false,
  "meta": null,
  "name": "Create Video",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1540,
        75
      ],
      "id": "1a1e2f6f-0c90-469d-b3ca-47329a1dedc0",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -880,
        300
      ],
      "id": "66396d2b-6923-4010-a8ab-8d0a8550efe7",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "wD7TRQWBCWoxmac0",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sseEndpoint": "http://short-video-maker:3123/mcp/sse",
        "include": "selected",
        "includeTools": [
          "create-short-video"
        ]
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        -620,
        340
      ],
      "id": "20845299-f84e-4592-80d8-5cf36aa6324a",
      "name": "MCP Client2"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -880,
        75
      ],
      "id": "6662a768-2707-4800-acc6-8efd1aa1b8c3",
      "name": "Aggregate2"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -220,
        75
      ],
      "id": "d7fd6ce2-3ee7-43ab-ac42-5d9d6d834533",
      "name": "Wait2",
      "webhookId": "fe4501f9-3334-4fc8-b3dd-83ea0ebb14a2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6cc1bd80-2bb7-47b6-950e-be3d6a36a965",
              "leftValue": "={{ $json.status }}",
              "rightValue": "ready",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        220,
        75
      ],
      "id": "a5ad3347-1d74-41ff-9fd8-b4d2963df095",
      "name": "If2"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"videoId\": {\n            \"type\": \"string\",\n            \"description\": \"the id of the video\"\n        },\n        \"videoTitle\": {\n            \"type\": \"string\",\n            \"description\": \"the title of the video on Youtube\"\n        }\n    },\n    \"required\": [\n        \"videoId\",\n        \"videoTitle\"\n    ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -420,
        295
      ],
      "id": "be91bb60-b0bd-4399-9739-2b129487f726",
      "name": "Structured Output Parser2"
    },
    {
      "parameters": {
        "url": "=http://short-video-maker:3123/api/short-video/{{ $('Generate video2').item.json.output.videoId }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        440,
        75
      ],
      "id": "8be06c0e-1479-4f7f-9f98-398a85bbd9eb",
      "name": "Download the video2",
      "alwaysOutputData": false,
      "retryOnFail": false
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<Instruction>\nTurn the following reddit story into a video. Keep everything, but make slight tweaks so it's easy to understand it in a text-to-speech video format with subtitles.\n\nReturn the video ID and the title of the video for the Youtube upload.\n</Instruction>\n\n<Story>\n{{ $json.data[4].title }}\n{{ $json.data[4].contentSnippet }}\n</Story>",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -628,
        75
      ],
      "id": "06f8f110-6a1a-47ae-a243-0a2639a7c427",
      "name": "Generate video2"
    },
    {
      "parameters": {
        "url": "=http://short-video-maker:3123/api/short-video/{{ $('Generate video2').item.json.output.videoId }}/status",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        0
      ],
      "id": "41ec0e39-d946-4ad6-8838-b4cf4e1352e4",
      "name": "Check video status2",
      "alwaysOutputData": false,
      "retryOnFail": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "220a5d64-eea7-47fb-9557-682ed4ac2670",
              "name": "title",
              "value": "={{ $json.title }}",
              "type": "string"
            },
            {
              "id": "667fc922-3cb8-41cf-b86e-e635cf75bdc2",
              "name": "contentSnippet",
              "value": "={{ $json.contentSnippet.split('submitted')[0].trim() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1100,
        75
      ],
      "id": "be3845aa-7a23-4624-8547-bc9cdff5ceb0",
      "name": "Map fields2"
    },
    {
      "parameters": {
        "url": "=https://www.theverge.com/rss/index.xml",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.1,
      "position": [
        -1320,
        75
      ],
      "id": "dccff1e6-9ce8-402e-9c1f-e6c7682941a0",
      "name": "Get top weekly posts2"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "={{ `/data/shared/content/${$('Generate video2').item.json.output.videoTitle.replace(/[^a-z0-9]/gi, \"_\").toLowerCase()}.mp4` }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        660,
        75
      ],
      "id": "2e742b6c-98f5-46f5-9c63-cfe99ce802ce",
      "name": "Read/Write Files from Disk1"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-06-04T01:36:12.511Z",
      "updatedAt": "2025-06-04T01:36:12.511Z",
      "id": "dGtOrWvjqdOJmtoa",
      "name": "LongVideo"
    },
    {
      "createdAt": "2025-06-04T01:36:21.061Z",
      "updatedAt": "2025-06-04T01:36:21.061Z",
      "id": "niyuhxYdtvAE4xcW",
      "name": "YouTube"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-07-02T03:07:16.556Z",
  "versionId": "8fdf50f7-eee0-4fa1-b21a-64eff2f7580d"
}